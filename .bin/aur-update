#!/usr/bin/env bash
# aur-update - update AUR packages
set -o errexit -o pipefail
shopt -s nullglob
shopt -s extglob
readonly argv0=update
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# default arguments
build_args=()

# default options (enabled)
all=1

# default options (disabled)
normal=0 vcs=0 manual=0

usage() {
    plain "usage: $argv0 [-canvm] [long options]"
    exit 1
}

source /usr/share/makepkg/util/util.sh
source /usr/share/makepkg/util/message.sh
source /usr/share/makepkg/util/parseopts.sh

if [[ -t 2 && ! -o xtrace ]]; then
    colorize
fi

opt_short='canvm'
opt_long=('chroot' 'all' 'normal' 'vcs' 'manual')

if ! parseopts "$opt_short" "${opt_long[@]}" -- "$@"; then
    usage
fi
set -- "${OPTRET[@]}"

unset root repo
while true; do
    case "$1" in
        -c|--chroot) build_args+=(-c) ;;
        -a|--all)    all=1 ;;
        -n|--normal) all=0; normal=1 ;;
        -v|--vcs)    all=0; vcs=1 ;;
        -m|--manual) all=0; manual=1 ;;
        --)          shift; break ;;
    esac
    shift
done
unset opt_short opt_long OPTRET

if ((all)); then
    normal=1 vcs=1 manual=1
fi

if ((normal)); then
    aur sync "${build_args[@]}" -u
fi

if ((vcs)); then
    aur vercmp-devel 2> /dev/null \
        | cut -d: -f1 \
        | aur sync "${build_args[@]}" --no-ver-shallow -
fi

if ((manual)); then
    AURDEST_bak=$AURDEST
    export AURDEST="$HOME/packages"
    aur vercmp-devel -d manual 2> /dev/null \
        | cut -d: -f1 \
        | aur rebuild -cd manual -
    export AURDEST=$AURDEST_bak
fi

# vim: set et sw=4 sts=4 ft=sh:
