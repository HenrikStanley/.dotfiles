#!/usr/bin/env bash

set -o errexit -o pipefail
shopt -s nullglob
readonly argv0=update
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# default arguments
build_args=()

# default options (enabled)
all=1

# default options (disabled)
normal=0 vcs=0 manual=0

usage() {
    plain "usage: $argv0 [-canvm] [long options]"
    exit 1
}

source /usr/share/makepkg/util/util.sh
source /usr/share/makepkg/util/message.sh

if [[ -t 2 && ! -o xtrace ]]; then
    colorize
fi

if getopt -T || (($? != 4)); then
    error "$argv0: util-linux getopt required"
    exit 22
fi

longopts=chroot,all,normal,vcs,manual
shortopts=canvm

if optstring=$(getopt -o "$shortopts" -l "$longopts" -n "$argv0" -- "$@"); then
    eval set -- "$optstring"
else
    usage
fi

unset root repo
while true; do
    case "$1" in
        -c|--chroot)
            build_args+=(-c)
            shift ;;
        -a|--all)
            all=1
            shift ;;
        -n|--normal)
            all=0
            normal=1
            shift ;;
        -v|--vcs)
            all=0
            vcs=1
            shift ;;
        -m|--manual)
            all=0
            manual=1
            shift;;
        *)
            shift
            break ;;
    esac
done

if ((all)); then
    normal=1 vcs=1 manual=1
fi

if ((normal)); then
    aur sync "${build_args[@]}" -u
fi

if ((vcs)); then
    aur vercmp-devel 2> /dev/null \
        | cut -d: -f1 \
        | aur sync "${build_args[@]}" --no-ver-shallow -
fi

if ((manual)); then
    AURDEST_bak=$AURDEST
    export AURDEST="$HOME/packages"
    aur vercmp-devel -d manual 2> /dev/null \
        | cut -d: -f1 \
        | aur rebuild -cd manual -
    export AURDEST=$AURDEST_bak
fi

# vim: set et sw=4 sts=4 ft=sh:
